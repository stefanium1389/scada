// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scada_back.Context;

#nullable disable

namespace scada_back.Migrations
{
    [DbContext(typeof(ScadaDbContext))]
    partial class ScadaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("scada_back.Models.ActivatedAlarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlarmId")
                        .HasColumnType("int")
                        .HasColumnName("alarm_id");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlarmId");

                    b.ToTable("ActivatedAlarms");
                });

            modelBuilder.Entity("scada_back.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Driver")
                        .HasColumnType("int")
                        .HasColumnName("driver");

                    b.Property<int?>("Function")
                        .HasColumnType("int")
                        .HasColumnName("function");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("SimGenerateTime")
                        .HasColumnType("int")
                        .HasColumnName("generate_time");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("scada_back.Models.Alarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Limit")
                        .HasColumnType("float")
                        .HasColumnName("limit");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<int?>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("Alarms");
                });

            modelBuilder.Entity("scada_back.Models.AnalogInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<double>("HighLimit")
                        .HasColumnType("float")
                        .HasColumnName("high_limit");

                    b.Property<bool>("IsScanning")
                        .HasColumnType("bit")
                        .HasColumnName("is_scanning");

                    b.Property<double>("LowLimit")
                        .HasColumnType("float")
                        .HasColumnName("low_limit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int")
                        .HasColumnName("scan_time");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("unit");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("AnalogInputs");
                });

            modelBuilder.Entity("scada_back.Models.AnalogInputValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalogInputId")
                        .HasColumnType("int")
                        .HasColumnName("analog_input_id");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AnalogInputId");

                    b.ToTable("AnalogInputValues");
                });

            modelBuilder.Entity("scada_back.Models.AnalogOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<double>("HighLimit")
                        .HasColumnType("float")
                        .HasColumnName("high_limit");

                    b.Property<double>("InitialValue")
                        .HasColumnType("float")
                        .HasColumnName("initial_value");

                    b.Property<double>("LowLimit")
                        .HasColumnType("float")
                        .HasColumnName("low_limit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("unit");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("AnalogOutputs");
                });

            modelBuilder.Entity("scada_back.Models.AnalogOutputValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("AnalogOutputValues");
                });

            modelBuilder.Entity("scada_back.Models.DigitalInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("IsScanning")
                        .HasColumnType("bit")
                        .HasColumnName("is_scanning");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int")
                        .HasColumnName("scan_time");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("DigitalInputs");
                });

            modelBuilder.Entity("scada_back.Models.DigitalInputValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DigitalInputId")
                        .HasColumnType("int")
                        .HasColumnName("digital_input_id");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DigitalInputId");

                    b.ToTable("DigitalInputValues");
                });

            modelBuilder.Entity("scada_back.Models.DigitalOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("InitialValue")
                        .HasColumnType("bit")
                        .HasColumnName("initial_value");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("DigitalOutputs");
                });

            modelBuilder.Entity("scada_back.Models.DigitalOutputValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("DigitalOutputValues");
                });

            modelBuilder.Entity("scada_back.Models.RealTimeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("GenerateTime")
                        .HasColumnType("int")
                        .HasColumnName("generate_time");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float")
                        .HasColumnName("max_value");

                    b.Property<double>("MinValue")
                        .HasColumnType("float")
                        .HasColumnName("min_value");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("RealTimeUnits");
                });

            modelBuilder.Entity("scada_back.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("scada_back.Models.ActivatedAlarm", b =>
                {
                    b.HasOne("scada_back.Models.Alarm", "TargetAlarm")
                        .WithMany()
                        .HasForeignKey("AlarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetAlarm");
                });

            modelBuilder.Entity("scada_back.Models.Alarm", b =>
                {
                    b.HasOne("scada_back.Models.AnalogInput", "Tag")
                        .WithMany("Alarms")
                        .HasForeignKey("TagId");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("scada_back.Models.AnalogInput", b =>
                {
                    b.HasOne("scada_back.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("scada_back.Models.AnalogInputValue", b =>
                {
                    b.HasOne("scada_back.Models.AnalogInput", "Tag")
                        .WithMany()
                        .HasForeignKey("AnalogInputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("scada_back.Models.AnalogOutput", b =>
                {
                    b.HasOne("scada_back.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("scada_back.Models.AnalogOutputValue", b =>
                {
                    b.HasOne("scada_back.Models.AnalogOutput", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("scada_back.Models.DigitalInput", b =>
                {
                    b.HasOne("scada_back.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("scada_back.Models.DigitalInputValue", b =>
                {
                    b.HasOne("scada_back.Models.DigitalInput", "Tag")
                        .WithMany()
                        .HasForeignKey("DigitalInputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("scada_back.Models.DigitalOutput", b =>
                {
                    b.HasOne("scada_back.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("scada_back.Models.DigitalOutputValue", b =>
                {
                    b.HasOne("scada_back.Models.DigitalOutput", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("scada_back.Models.RealTimeUnit", b =>
                {
                    b.HasOne("scada_back.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("scada_back.Models.AnalogInput", b =>
                {
                    b.Navigation("Alarms");
                });
#pragma warning restore 612, 618
        }
    }
}
